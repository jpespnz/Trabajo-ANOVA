data = "~/Users/JP/Downloads/sleep_memory_data.csv"
data
View(data)
data
read.csv("/Users/JP/Downloads/sleep_memory_data.csv")
df = read.csv("/Users/JP/Downloads/sleep_memory_data.csv")
df
glimpse(df)
if (!require("readxl")) install.packages("readxl"); library("readxl")
if (!require("writexl")) install.packages("writexl"); library("writexl")
if (!require("tidyverse")) install.packages("tidyverse"); library("tidyverse")
if (!require("car")) install.packages("car"); library("car")
if (!require("psych")) install.packages("psych"); library("psych")
if (!require("afex")) install.packages("afex"); library("afex")
if (!require("emmeans")) install.packages("emmeans"); library("emmeans")
if (!require("easystats")) install.packages("easystats"); library("easystats")
if (!require("psychTools")) install.packages("psychTools"); library("psychTools")
if (!require('report')) install.packages('report'); library('report')
if (!require('papaja')) install.packages("papaja"); library('papaja')
if (!require('knitr')) install.packages('knitr'); library('knitr')
if (!require('ggforce')) install.packages('ggforce'); library('ggforce')
if (!require('Hmisc')) install.packages('Hmisc'); library('Hmisc')
if (!require('gtsummary')) install.packages('gtsummary'); library('gtsummary')
library(emmeans)
glimpse(df)
summary(df)
df$Days <- as.factor(df$Days)
```{r}
df = read.csv("/Users/JP/Downloads/sleep_memory_data.csv")
df
df$SDL <- as.factor(df$SDL)
glimpse(df)
summary(df)
df$SDL <- as.factor(df$SDL)
describeBy(df, group = df$SDL)
glimpse(df)
summary(df)
df$SDL <- as.factor(df$SDL)
describeBy(df, group = df$SDL)
# No_Sleep_Deprivation: Personas que duermen 7 horas o más
# Moderate_Sleep_Deprivation: Personas que duermen entre 4-6 horas
# Severe_Sleep_Deprivation: Personas que duermen entre 1-3 horas
```
library(psych)
# Guardar el resultado en un objeto
desc <- describeBy(df, group = df$SDL, mat = TRUE)
# Extraer solo la columna 'n' (número de participantes) por grupo
n_por_grupo <- unique(desc[, c("group", "n")])
# Extraer solo la columna 'n' (número de participantes) por grupo
n_por_grupo <- unique(desc[, c("group", "ID")])
# Extraer solo la columna 'n' (número de participantes) por grupo
n_por_grupo <- unique(desc[, c("SDL", "ID")])
describeBy(df, group = df$SDL)
describeBy(df, group = df$SDL)
df |>
select(-ID) |>
describeBy(SDL)
df |>
select(-ID) |>
describeBy(df$SDL)
library(dplyr)
library(psych)
# Esto genera una única tabla con todos los grupos combinados
desc <- df |>
select(-ID) |>
describeBy(group = df$SDL, mat = TRUE)
# Ver tabla completa con todos los grupos
head(desc)
##
library(tidyr)
library(dplyr)
# Suponiendo que tu objeto se llama `desc`
desc_wide <- desc %>%
select(group = group1, variable = item, n, mean, sd) %>%
pivot_wider(
names_from = variable,
values_from = c(n, mean, sd),
names_glue = "{variable}_{.value}"
)
print(desc_wide)
df |>
select(-ID) |>
describeBy(df$SDL)
df
ggplot(df, aes(x = SDL, y = WMS)) +
stat_summary(fun = mean, geom = "line", color = "steelblue", size = 1.2) +
stat_summary(fun.data = mean_se, geom = "errorbar", width = 0.3) +
labs(title = "Sueño y memoria de trabajo",
x = "Horas de privación de sueño", y = "Rendimiento memoria de trabajo") +
theme_minimal()
glimpse(df)
summary(df)
df$SDL <- as.factor(df$SDL)
ggplot(df, aes(x = SDL, y = WMS)) +
stat_summary(fun = mean, geom = "line", color = "steelblue", size = 1.2) +
stat_summary(fun.data = mean_se, geom = "errorbar", width = 0.3) +
labs(title = "Sueño y memoria de trabajo",
x = "Horas de privación de sueño", y = "Rendimiento memoria de trabajo") +
theme_minimal()
ggplot(df, aes(x = factor(SDL), y = WMS)) +
geom_boxplot(fill = "lightblue") +
labs(title = "Distribución del tiempo de reacción por día",
x = "Día", y = "Tiempo de reacción (ms)") +
theme_minimal()
ggplot(df, aes(x = factor(SDL), y = WMS)) +
geom_boxplot(fill = "lightblue") +
labs(title = "Sueño y memoria de trabajo",
x = "SDL", y = "WMS") +
theme_minimal()
ggplot(sleepstudy, aes(x = SDL, y = WMS, group = Subject)) +
geom_line(alpha = 0.3) +
labs(title = "Rendimiento en memoria de trabajo por categoría",
x = "SDL", y = "WMS") +
theme_minimal()
ggplot(sleepstudy, aes(x = SDL, y = WMS, group = Subject)) +
geom_line(alpha = 0.3) +
labs(title = "Rendimiento en memoria de trabajo por categoría",
x = "SDL", y = "WMS") +
theme_minimal()
ggplot(sleepstudy, aes(x = SDL, y = WMS, group = Subject)) +
geom_line(alpha = 0.3) +
labs(title = "Rendimiento en memoria de trabajo por categoría",
x = "Días", y = "Tiempo de reacción") +
theme_minimal()
ggplot(sleepstudy, aes(x = SDL, y = WMS, group = Subject)) +
geom_line(alpha = 0.3) +
labs(title = "Rendimiento en memoria de trabajo por categoría",
x = "Días", y = "Tiempo de reacción") +
theme_minimal()
ggplot(df, aes(x = SDL, y = WMS, group = Subject)) +
geom_line(alpha = 0.3) +
labs(title = "Rendimiento en memoria de trabajo por categoría",
x = "Días", y = "Tiempo de reacción") +
theme_minimal()
ggplot(df, aes(x = ID, y = WMS, group = SDL)) +
geom_line(alpha = 0.3) +
labs(title = "Rendimiento en memoria de trabajo por categoría",
x = "Días", y = "Tiempo de reacción") +
theme_minimal()
ggplot(df, aes(x = SDL, y = WMS, group = ID)) +
geom_line(alpha = 0.3) +
labs(title = "Rendimiento en memoria de trabajo por categoría",
x = "Días", y = "Tiempo de reacción") +
theme_minimal()
ggplot(df, aes(x = SDL, y = WMS)) +
geom_line(alpha = 0.3) +
labs(title = "Rendimiento en memoria de trabajo por categoría",
x = "Días", y = "Tiempo de reacción") +
theme_minimal()
model <- aov_ez(id = "Subject",
dv = "Reaction",
within = "Days",
data = sleepstudy)
model <- aov(SDL~WMS, data = df)
strdf
str(df)
df = read.csv("/Users/JP/Downloads/sleep_memory_data.csv")
# No_Sleep_Deprivation: Personas que duermen 7 horas o más
# Moderate_Sleep_Deprivation: Personas que duermen entre 4-6 horas
# Severe_Sleep_Deprivation: Personas que duermen entre 1-3 horas
glimpse(df)
summary(df)
df$SDL <- as.factor(df$SDL)
df |>
select(-ID) |>
describeBy(df$SDL)
ggplot(df, aes(x = SDL, y = WMS)) +
stat_summary(fun = mean, geom = "line", color = "steelblue", size = 1.2) +
stat_summary(fun.data = mean_se, geom = "errorbar", width = 0.3) +
labs(title = "Sueño y memoria de trabajo",
x = "Horas de privación de sueño", y = "Rendimiento memoria de trabajo") +
theme_minimal()
model <- aov(SDL~WMS, data = df)
qqnorm(residuals(model))
model <- aov(SDL ~ WMS, data = df)
str(df)
table(df$SDL)
type(df$SDL)
df$SDL
summary(model)
str(df)
levels(df$SDL)
model <- aov(SDL ~ WMS, data = df)
model
rm(list = ls())
df = read.csv("/Users/JP/Downloads/sleep_memory_data.csv")
# No_Sleep_Deprivation: Personas que duermen 7 horas o más
# Moderate_Sleep_Deprivation: Personas que duermen entre 4-6 horas
# Severe_Sleep_Deprivation: Personas que duermen entre 1-3 horas
str(df)
glimpse(df)
summary(df)
df$SDL <- as.character(df$SDL)
df$SDL <- factor(x = df$SDL, levels = c("0","1","2"))
df |>
select(-ID) |>
describeBy(df$SDL)
ggplot(df, aes(x = SDL, y = WMS)) +
stat_summary(fun = mean, geom = "line", color = "steelblue", size = 1.2) +
stat_summary(fun.data = mean_se, geom = "errorbar", width = 0.3) +
labs(title = "Sueño y memoria de trabajo",
x = "Horas de privación de sueño", y = "Rendimiento memoria de trabajo") +
theme_minimal()
ggplot(df, aes(x = factor(SDL), y = WMS)) +
geom_boxplot(fill = "lightblue") +
labs(title = "Sueño y memoria de trabajo",
x = "SDL", y = "WMS") +
theme_minimal()
model <- aov(SDL ~ WMS, data = df)
model <- anova(SDL ~ WMS, data = df)
model <- aov(SDL ~ WMS, data = df)
str(df)
formula??
dsa
??aov
model <- Base::aov(SDL ~ WMS, data = df)
model <- base::aov(SDL ~ WMS, data = df)
model <- stats::aov(SDL ~ WMS, data = df)
model <- stats::aov(WMS ~ SDL, data = df)
summary(model)
qqnorm(residuals(model))
qqline(residuals(model), col = "red")
qqnorm(residuals(model))
qqline(residuals(model), col = "red")
qqnorm(residuals(model))
qqline(residuals(model), col = "red")
qqnorm(residuals(model))
qqline(residuals(model), col = "red")
qqnorm(residuals(model))
stats::qqline(residuals(model), col = "red")
check_model(model)
shapiro_test <- shapiro.test(residuals(model))
print(shapiro_test)
summary(model)
eta_squared(model, partial = TRUE)
emmeans(model, pairwise ~ Days, adjust = "fdr")
summary(model)
eta_squared(model, partial = TRUE)
```{r, warning=FALSE}
summary(model)
eta_squared(model, partial = TRUE)
df = read.csv("/Users/JP/Desktop/Trabajo-ANOVA/sleep_memory_data.csv")
glimpse(df)
summary(df)
df$SDL <- as.character(df$SDL)
df$SDL <- factor(x = df$SDL, levels = c("0","1","2"))
